<div id = "board" style = "position: absolute; top: 20px; left: 300px; width: 600px; height: 600px; background-color: gray; border-color: black; border-style: solid;">
</div>
<select id = "skin" style = "position: absolute; top: 580px;">
<option value = "pearl" >pearl</option>
<option value = "pipe" >pipe</option>
<option value = "bone" >bone</option>
</select>
<div id = "bluePlayer" style = "padding: 5px; position: absolute; top: 310px; left: 1000px; height: 200px; width: 200px; background-color: lightblue; border-style: none; border-color: green;">
<h1>{{bluePlayer}} {{bluePlayerRating}}</h1>
<h3 id = "blueClock"></h3>
</div>
<div id = "redPlayer" style = "padding: 5px; position: absolute; top: 20px; left: 1000px; height: 200px; width: 200px; background-color: pink; border-style none; border-color: green;">
<h1>{{redPlayer}} {{redPlayerRating}}</h1>
<h3 id = "redClock"></h3>
</div>
<a href = "/"><button id = "menu" class = "menuButton" style = "font-size: 150%">Back to menu</button></a>
<a href = "/review/{{index}}" ><button id = "review" class = "menuButton" style = "font-size: 150%">Review</button></a>

<button id = "resign" style = "position: absolute; top: 150px;">resign</button>
<div id = "pgnBox" style = "position: absolute; top: 200px; left: 30px; background-color: rgba(100,0,100,0.3); height: 300px; width: 260px; overflow-y: scroll;">
<p id = "PGN"><p>
</div>


<script type = "text/javascript" src = "../javascripts/partical.js"></script>
<script type = "text/javascript" src = "../javascripts/board.js"></script>
<script type = "text/javascript" src = "../javascripts/clock.js"></script>

<script type = "text/javascript">
var skin = "pearl";
blueClock.draw();
redClock.draw();
	if ({{player}} == 2) {
		var blueDiv = document.getElementById("bluePlayer");
		var redDiv = document.getElementById("redPlayer");
		blueDiv.style.top = "20px";
		redDiv.style.top = "310px";
	}

	var roomIndex = {{index}};
	if ({{player}} == 2) {
		board.isFliped = true;
	}
	board.size = {{boardSize}};
	board.set();
	board.draw();
	
	if ({{player}} > 0) {
		var gif = document.createElement("IMG");
		if ({{player}} == 1) {
			gif.src = "../images/buttons/moveAnimation.gif";
		} else {
			gif.src = "../images/buttons/moveAnimationRed.gif";
		}
		var pgnBox = document.getElementById("pgnBox");
		pgnBox.appendChild(gif);
	}
	
	for (y=0;y<board.size;y++) {
		for (x=0;x<board.size;x++) {
			var index = x + "x" + y;
			var partical = document.getElementById(index);
			partical.addEventListener('click', function () {
				socket.emit('select', {roomIndex: {{index}}, name: "{{me}}", particalIndex: this.id});
				socket.emit('roomEnter', {{index}});
				if (board.particals[this.id].selected == "child") {
					pgnBox.removeChild(gif);
				}
			});
			
			partical.ondragstart = function () {
				socket.emit('select', {roomIndex: {{index}}, name: "{{me}}", particalIndex: this.id});
				socket.emit('roomEnter', {{index}});
				if ({{player}} > 0 ) {
					showHint();
				}
				return false;
			};
		}
	}
	
	function showHint () {
		var gif = document.createElement("IMG");
		if ({{player}} == 1) {
			gif.src = "../images/buttons/moveAnimation.gif";
		} else {
			gif.src = "../images/buttons/moveAnimationRed.gif";
		}
		var pgnBox = document.getElementById("pgnBox");
		pgnBox.appendChild(gif);
		setTimeout(function () {
			pgnBox.removeChild(gif);
		}, 10000);
	}
	
	document.getElementById("resign").addEventListener('click', function () {
		socket.emit('resign', {roomIndex: {{index}}, name: "{{me}}"});
	});
	
	document.getElementById("resign").addEventListener('mouseout', function () {
		socket.emit('roomEnter', {{index}});
	});
	
	socket.on('changes!' ,function (data) {
	var PGN = document.getElementById("PGN");
	PGN.innerHTML = data.PGN;
	console.log(data.PGN);
	var blueTime = data.blueTime.split(",");
	var redTime = data.redTime.split(",");
	blueClock.hours = blueTime[0];
	blueClock.minuts = blueTime[1];
	blueClock.seconds = blueTime[2];
	blueClock.centiseconds = blueTime[3];
	redClock.hours = redTime[0];
	redClock.minuts = redTime[1];
	redClock.seconds = redTime[2];
	redClock.centiseconds = redTime[3];
	blueClock.draw();
	redClock.draw();
	var blueDiv = document.getElementById("bluePlayer");
	var redDiv = document.getElementById("redPlayer");
	if (data.turn == "blue") {
		blueDiv.style.borderStyle = "solid";
		redDiv.style.borderStyle = "none";
		if (redClock.isOn) {
			redClock.stop();
		}
		if (!blueClock.isOn && data.turnNumber > 0) {
			blueClock.start();
		}
	}else {
		blueDiv.style.borderStyle = "none";
		redDiv.style.borderStyle = "solid";
		if (blueClock.isOn) {
			blueClock.stop();
		}
		if (!redClock.isOn) {
			redClock.start();
		}
	}
	var changes = data.changes.split(",");
	
		for (i=0;i<changes.length;i++) {
			var indexAndData = changes[i].split("=");
			if (indexAndData.length < 2) {
				break;
			}
			var index = indexAndData[0];
			var particalData = indexAndData[1].split("");
			switch (particalData[0]) {
				case "y":
				board.particals[index].selected = "yes";
				break;
				case "n":
				board.particals[index].selected = "no";
				break;
				case "c":
				board.particals[index].selected = "child";
				break;
			}
			switch (particalData[1]) {
				case "b":
				board.particals[index].team = "blue";
				break;
				case "r":
				board.particals[index].team = "red";
				break;
				case "p":
				board.particals[index].team = "purple";
				break;
				default:
				board.particals[index].team = "black";
			}
			switch (particalData[2]) {
				case "u":
				board.particals[index].vertical = "up";
				break;
				case "d":
				board.particals[index].vertical = "down";
				break;
			}
			switch (particalData[3]) {
				case "l":
				board.particals[index].horizontal = "left";
				break;
				case "r":
				board.particals[index].horizontal = "right";
				break;
			}
			board.particals[index].adjust();
		}
		board.adjust();
	});
	
	socket.on('position!' ,function (data) {
		console.log(data.position);
		var currntPosition = data.position.split(",");
	
		for (i=0;i<currntPosition.length;i++) {
			var indexAndData = currntPosition[i].split("=");
			if (indexAndData.length < 2) {
				break;
			}
			var index = indexAndData[0];
			var particalData = indexAndData[1].split("");
			switch (particalData[0]) {
				case "y":
				board.particals[index].selected = "yes";
				break;
				case "n":
				board.particals[index].selected = "no";
				break;
				case "c":
				board.particals[index].selected = "child";
				break;
			}
			switch (particalData[1]) {
				case "b":
				board.particals[index].team = "blue";
				break;
				case "r":
				board.particals[index].team = "red";
				break;
				case "p":
				board.particals[index].team = "purple";
				break;
				default:
				board.particals[index].team = "black";
			}
			switch (particalData[2]) {
				case "u":
				board.particals[index].vertical = "up";
				break;
				case "d":
				board.particals[index].vertical = "down";
				break;
			}
			switch (particalData[3]) {
				case "l":
				board.particals[index].horizontal = "left";
				break;
				case "r":
				board.particals[index].horizontal = "right";
				break;
			}
			board.particals[index].adjust();
		}
		board.adjust();
	});
	
	socket.on('changes cumputing', function () {
		socket.emit('changes?');
	});
	socket.on('move{{index}}', function (data) {
		socket.emit('changes?' ,roomIndex);
	});
	
	var blueBox = document.getElementById("bluePlayer");
	var redBox = document.getElementById("redPlayer");
	var win = document.createElement("H2");
	var lose = document.createElement("H2");
	var drawB = document.createElement("H2");
	var drawR = document.createElement("H2");
	win.innerText = "WIN";
	lose.innerText = "LOSE";
	drawB.innerText = "DRAW";
	drawR.innerText = "DRAW";
	
	socket.on('game done {{index}}' , function (data) {
		
			switch (data) {
				case "blue wins":
					blueBox.appendChild(win);
					redBox.appendChild(lose);
				break;
				case "red wins":
					blueBox.appendChild(lose);
					redBox.appendChild(win);
				break;
				case "draw":
					blueBox.appendChild(drawB);
					redBox.appendChild(drawR);
			}
			clearInterval(blueClock.interval);
			clearInterval(redClock.interval);
	});
	
	socket.emit('changes?', roomIndex);
	skin = document.getElementById("skin").value;
	var interval = setInterval(changes, 5000);
	function changes() {
		skin = document.getElementById("skin").value;
		socket.emit('changes?', roomIndex);
	}
	if ("{{state}}" == "playing") {
		socket.emit('game start', roomIndex);
	}
	adjustWindow();
	document.body.onresize = function () {
		adjustWindow();
	};
	
	function adjustWindow () {
		var boardDiv = document.getElementById("board");
		boardDiv.style.left = window.innerWidth * 0.5 - 300 + "px";
		var blueDiv = document.getElementById("bluePlayer");
		var redDiv = document.getElementById("redPlayer");
		blueDiv.style.left = window.innerWidth * 0.5 + 340 + "px";
		redDiv.style.left = window.innerWidth * 0.5 + 340 + "px";
		var pgnBox = document.getElementById("pgnBox");
		pgnBox.style.left = window.innerWidth * 0.5 - 600 + "px";
		var resign = document.getElementById("resign");
		resign.style.left = window.innerWidth * 0.5 - 600 + "px";
		var menu = document.getElementById("menu");
		menu.style.left = window.innerWidth * 0.5 - 600 + "px";
		var skinMenu = document.getElementById("skin");
		skinMenu.style.left = window.innerWidth * 0.5 - 600 + "px";
		var review = document.getElementById("review");
		review.style.left = window.innerWidth * 0.5 - 600 + "px";
		review.style.top = "520px";
	};
	login();
	function login() {
		var userName = "{{me}}";
		var password = "{{password}}";
		socket.emit('login', {userName: userName, password: password});
	}
</script>